DefinitionBlock ("", "SSDT", 2, "CpyPst", "GFX0", 0x00000001)
{
	External (_SB_.PCI0, DeviceObj)
	External (_SB_.PCI0.PEG0, DeviceObj)
	External (_SB_.PCI0.PEG0.PEGP, DeviceObj)

	Scope (\_SB)    // System BUS
	{
		Scope (PCI0)    // PCI root bridge
		{
			Scope (PEG0)    // PCI Embedded Graphic "numeric"
			{
				Scope (PEGP)    // PCI Bridge 0
				{
					Device (BRG0)    // PCI Bridge 1
					{
						Name (_ADR, Zero)  // _ADR: Address
						Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
						{
							Return (0x0F)    // Control Method Apply
						}

						Device (GFX0)    // Dedicated Grapic Processor Unit
						{
							Name (_ADR, Zero)  // _ADR: Address
							Name (_SUN, One)  // _SUN: Slot User Number
							Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
							{
								If ((Arg2 == Zero))
								{
									Return (Buffer ()
									{
										 0x03                                             // .
									})
								}

								Return (Package ()    //    Radeon RX 5500 XT Properties
								{
									"@0,AAPL,boot-display", 
									Buffer ()
									{
										 0x01, 0x00, 0x00, 0x00                           // ....
									}, 

									"@0,ATY,EFIDisplay", 
									Buffer ()
									{
										 0x44, 0x50, 0x31                                 // DP1
									}, 

									"@0,compatible", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@0,device_type", 
									Buffer ()
									{
										 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79         // display
									}, 

									"@0,display-type", 
									Buffer ()
									{
										 0x4C, 0x43, 0x44                                 // LCD
									}, 

									"@0,display_type", 
									Buffer ()
									{
										 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79         // display
									}, 

									"@0,name", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@1,compatible", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@1,device_type", 
									Buffer ()
									{
										 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79         // display
									}, 

									"@1,display-type", 
									Buffer ()
									{
										 0x4E, 0x4F, 0x4E, 0x45                           // NONE
									}, 

									"@1,name", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@2,compatible", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@2,device_type", 
									Buffer ()
									{
										 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79         // display
									}, 

									"@2,display-type", 
									Buffer ()
									{
										 0x4E, 0x4F, 0x4E, 0x45                           // NONE
									}, 

									"@2,name", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@3,compatible", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"@3,device_type", 
									Buffer ()
									{
										 0x64, 0x69, 0x73, 0x70, 0x6C, 0x61, 0x79         // display
									}, 

									"@3,display-type", 
									Buffer ()
									{
										 0x4E, 0x4F, 0x4E, 0x45                           // NONE
									}, 

									"@3,name", 
									Buffer ()
									{
										/* 0000 */  0x41, 0x54, 0x59, 0x2C, 0x50, 0x79, 0x74, 0x68,  // ATY,Pyth
										/* 0008 */  0x6F, 0x6E                                       // on
									}, 

									"AAPL,slot-name", 
									Buffer ()
									{
										 0x53, 0x6C, 0x6F, 0x74, 0x2D, 0x20, 0x31         // Slot- 1
									}, 

									"ATY,EFIBootMode", 
									Buffer ()
									{
										/* 0000 */  0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,  // ........
										/* 0008 */  0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,  // ........
										/* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0020 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0028 */  0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0030 */  0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,  // ........
										/* 0038 */  0x00, 0x50, 0xCF, 0xCD, 0x1C, 0x00, 0x00, 0x00,  // .P......
										/* 0040 */  0x00, 0x00, 0x0A, 0x00, 0x00, 0x40, 0x0B, 0x00,  // .....@..
										/* 0048 */  0x00, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0050 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00,  // .....R..
										/* 0058 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0060 */  0x00, 0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,  // .0... ..
										/* 0068 */  0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x0A, 0x00,  // ........
										/* 0070 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,  // ........
										/* 0078 */  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0080 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0088 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00,  // ........
										/* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01,  // ........
										/* 0098 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,  // ........
										/* 00A0 */  0x00, 0x03, 0x00, 0x00, 0x00, 0x50, 0xCF, 0xCD,  // .....P..
										/* 00A8 */  0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00,  // ........
										/* 00B0 */  0x00, 0x40, 0x0B, 0x00, 0x00, 0xA0, 0x00, 0x00,  // .@......
										/* 00B8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00C0 */  0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // .R......
										/* 00C8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,  // .....0..
										/* 00D0 */  0x00, 0x20, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00,  // . ......
										/* 00D8 */  0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00F8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0100 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0108 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0110 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0118 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0120 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0128 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0130 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0138 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0140 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0148 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0150 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0158 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0160 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0168 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0170 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0178 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0180 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0188 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0190 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0198 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01A0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01B0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01B8 */  0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01C0 */  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  // ........
										/* 01C8 */  0x10, 0x8F, 0xEC, 0x37, 0x00, 0x00, 0x00, 0x00,  // ...7....
										/* 01D0 */  0x00, 0x14, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00,  // ....@...
										/* 01D8 */  0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01E0 */  0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,  // ....R...
										/* 01E8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 01F0 */  0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,  // 0... ...
										/* 01F8 */  0x01, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,  // ........
										/* 0200 */  0x00, 0x00, 0x00                                 // ...
									}, 

									"ATY,EFICompileDate", 
									Buffer ()
									{
										/* 0000 */  0x4F, 0x63, 0x74, 0x20, 0x31, 0x32, 0x20, 0x32,  // Oct 12 2
										/* 0008 */  0x30, 0x31, 0x39                                 // 019
									}, 

									"ATY,EFIDriverType", 
									Buffer ()
									{
										 0x30, 0x32                                       // 02
									}, 

									"ATY,EFIEnabledMode", 
									Buffer ()
									{
										 0x30, 0x34                                       // 04
									}, 

									"ATY,EFIVersion", 
									Buffer ()
									{
										/* 0000 */  0x33, 0x31, 0x2E, 0x30, 0x2E, 0x31, 0x32, 0x30,  // 31.0.120
										/* 0008 */  0x32, 0x36, 0x2E, 0x33                           // 26.3
									}, 

									"ATY,EFIVersionB", 
									Buffer ()
									{
										/* 0000 */  0x31, 0x31, 0x33, 0x2D, 0x4D, 0x53, 0x49, 0x54,  // 113-MSIT
										/* 0008 */  0x56, 0x33, 0x38, 0x32, 0x4D, 0x48, 0x2E, 0x31,  // V382MH.1
										/* 0010 */  0x36, 0x31                                       // 61
									}, 

									"ATY,Rom#", 
									Buffer ()
									{
										/* 0000 */  0x31, 0x31, 0x33, 0x2D, 0x45, 0x58, 0x54, 0x33,  // 113-EXT3
										/* 0008 */  0x37, 0x36, 0x33, 0x35, 0x2D, 0x30, 0x30, 0x31   // 7635-001
									}, 

									"ATY,copyright", 
									Buffer ()
									{
										/* 0000 */  0x43, 0x6F, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68,  // Copyrigh
										/* 0008 */  0x74, 0x20, 0x41, 0x4D, 0x44, 0x20, 0x49, 0x6E,  // t AMD In
										/* 0010 */  0x63, 0x2E, 0x20, 0x20, 0x41, 0x6C, 0x6C, 0x20,  // c.  All 
										/* 0018 */  0x52, 0x69, 0x67, 0x68, 0x74, 0x20, 0x52, 0x65,  // Right Re
										/* 0020 */  0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x2E, 0x20,  // served. 
										/* 0028 */  0x20, 0x32, 0x30, 0x30, 0x35, 0x2D, 0x32, 0x30,  //  2005-20
										/* 0030 */  0x31, 0x39                                       // 19
									}, 

									"Force_Load_FalconSMUFW", 
									Buffer ()
									{
										 0x01                                             // .
									}, 

									"PP_WorkLoadPolicyMask", 
									Buffer ()
									{
										 0x32                                             // 2
									}, 

									"StartupDisplay", 
									Buffer ()
									{
										/* 0000 */  0x47, 0x4E, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,  // GN......
										/* 0008 */  0x00, 0x14, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00,  // ....@...
										/* 0010 */  0x10, 0x8F, 0xEC, 0x37, 0x00, 0x00, 0x00, 0x00,  // ...7....
										/* 0018 */  0x00, 0x14, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00,  // ....@...
										/* 0020 */  0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0028 */  0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,  // ....R...
										/* 0030 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0038 */  0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,  // 0... ...
										/* 0040 */  0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,  // ........
										/* 0048 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0050 */  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0058 */  0x00, 0x00, 0x00, 0x00, 0x10, 0x06, 0x32, 0xAE,  // ......2.
										/* 0060 */  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0068 */  0x00, 0x0A, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00,  // ....@...
										/* 0070 */  0x50, 0xCF, 0xCD, 0x1C, 0x00, 0x00, 0x00, 0x00,  // P.......
										/* 0078 */  0x00, 0x0A, 0x00, 0x00, 0x40, 0x0B, 0x00, 0x00,  // ....@...
										/* 0080 */  0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0088 */  0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,  // ....R...
										/* 0090 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0098 */  0x30, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,  // 0... ...
										/* 00A0 */  0x03, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,  // ........
										/* 00A8 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00B0 */  0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00B8 */  0x10, 0x06, 0x32, 0xAE, 0x02, 0x00, 0x00, 0x00,  // ..2.....
										/* 00C0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,  // ........
										/* 00C8 */  0x40, 0x0B, 0x00, 0x00, 0x50, 0xCF, 0xCD, 0x1C,  // @...P...
										/* 00D0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,  // ........
										/* 00D8 */  0x40, 0x0B, 0x00, 0x00, 0xA0, 0x00, 0x00, 0x00,  // @.......
										/* 00E0 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 00E8 */  0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // R.......
										/* 00F0 */  0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,  // ....0...
										/* 00F8 */  0x20, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,  //  .......
										/* 0100 */  0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
										/* 0108 */  0x00, 0x00, 0x00, 0x00                           // ....
									}, 

									"hdagfx", 
									Buffer ()
									{
										/* 0000 */  0x6F, 0x6E, 0x62, 0x6F, 0x61, 0x72, 0x64, 0x2D,  // onboard-
										/* 0008 */  0x31                                             // 1
									}, 

									"agdpmod", 
									"pikera"
								})
							}
						}

						Device (HDAU)    // High Definition Audio
						{
							Name (_ADR, One)  // _ADR: Address
							Name (_SUN, One)  // _SUN: Slot User Number
							Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
							{
								If ((Arg2 == Zero))
								{
									Return (Buffer ()
									{
										 0x03                                             // .
									})
								}

								Return (Package ()    // High Definition Audio Properties
								{
									"driver-version", 
									Buffer ()
									{
										/* 0000 */  0x31, 0x30, 0x2E, 0x30, 0x2E, 0x31, 0x2E, 0x32,  // 10.0.1.2
										/* 0008 */  0x34                                             // 4
									}, 

									"hdagfx", 
									Buffer ()
									{
										/* 0000 */  0x6F, 0x6E, 0x62, 0x6F, 0x61, 0x72, 0x64, 0x2D,  // onboard-
										/* 0008 */  0x31                                             // 1
									}, 

									"model", 
									Buffer ()
									{
										/* 0000 */  0x4E, 0x61, 0x76, 0x69, 0x20, 0x31, 0x30, 0x20,  // Navi 10 
										/* 0008 */  0x48, 0x44, 0x4D, 0x49, 0x20, 0x41, 0x75, 0x64,  // HDMI Aud
										/* 0010 */  0x69, 0x6F                                       // io
									}
								})
							}
						}
					}
				}
			}
		}
	}
}